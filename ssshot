#!/bin/bash
#SSShot

set -e

#Function to run on script exit.
function cleanup {
    #Display message to user.
	if ${VERBOSE}
	then
		echo -e "[${GREEN}OK${NC}] Closing ${PACKAGE}...";
	fi
}
#Set function to run before script exit.
trap cleanup EXIT

PACKAGE='SSShot'
CONFIGAVAILABLE=0
MODULE_COUNT=0
RED='\e[1;31m'
YELLOW='\e[1;33m'
GREEN='\e[1;32m'
NC='\e[0m'
VERBOSE=false
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

#Fetch modules
MODULES=${DIR}'/modules/*'

#Fetch Modules
for path in ${MODULES}; do
    #Get base folder name
    dirname="$(basename "${path}")"
    #Build servers array.
    AVAILABLE_MODULES[$COUNTER]="$dirname"
    #Increment counter.
    let MODULE_COUNT=$MODULE_COUNT+1
done

while test $# -gt 0; do
        case "$1" in
                -h|--help)
                        echo "${PACKAGE} - attempt to capture frames"
                        echo " "
                        echo "${PACKAGE} [options] application [arguments]"
                        echo " "
                        echo "options:"
                        echo "-h, --help                show brief help"
                        echo "-m, --module=MODULE       specify a module to use: ${AVAILABLE_MODULES[*]}"
                        echo "-v, --verbose             show verbose messages"
                        exit 0
                        ;;
                -v)
                        export VERBOSE=true
                        shift
                        ;;
                --verbose*)
                        export VERBOSE=true
                        shift
                        ;;
                -m)
                        shift
                        if test $# -gt 0; then
                                export MODULE=${1}
                        else
                                echo -e "[${YELLOW}WARN${NC}] Module ${1} is unknown."
                                exit 1
                        fi
                        shift
                        ;;
                --module*)
                        export MODULE=`echo ${1} | sed -e 's/^[^=]*=//g'`
                        shift
                        ;;
                *)
                        break
                        ;;
        esac
done

#Load Config
source "$DIR/ssshot.config"

#Check if config was loaded.
if [ $CONFIGAVAILABLE == 0 ]; then
#No config loaded.
    #Set and build error dialog.
    echo -e "[${RED}ERROR${NC}] CONFIG COULD NOT BE LOADED! MAKE SURE THE CONFIG '${DIR}/fpshot.config' EXISTS!"
    exit 1;
else
    #Loaded, continue.
	if ${VERBOSE}
	then
		echo -e "[${GREEN}OK${NC}] Config loaded."
	fi
fi

#Load Chosen Module
if (( ${MODULE_COUNT} > 0))
then source "$DIR/modules/${MODULE}"
else echo -e "[${RED}ERROR${NC}] MODULE COULD NOT BE LOADED! MAKE SURE THE MODULE '${DIR}/modules/${MODULE}' EXISTS!"
fi